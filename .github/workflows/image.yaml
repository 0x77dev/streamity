name: Build and Publish Docker Images

on:
  push:

jobs:
  buildx:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["recognition", "stream", "api"]
        platform: ["linux/amd64"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          config: .github/buildkitd.toml

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate metadata
        id: metadata
        run: |
          if [[ $GITHUB_REF == 'refs/tags/'* ]]; then
            TAGS='["ghcr.io/0x77dev/streamity/${{ matrix.service }}:latest","ghcr.io/0x77dev/streamity/${{ matrix.service }}:'${GITHUB_REF/refs\/tags\//}'"]'
          else
            TAGS='["ghcr.io/0x77dev/streamity/${{ matrix.service }}:latest"]'
          fi
          echo '::set-output name=tags::'$TAGS

      - name: Build and push service
        run: |
          cd ${{ matrix.service }}
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" -cache-to "type=local,dest=/tmp/.buildx-cache" \
            --platform ${{ matrix.platform }} --push . -t ${{ fromJson(steps.metadata.outputs.tags) }}
